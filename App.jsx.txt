import React, { useState, useRef } from 'react';

const SpaceMindApp = () => {
  const [currentView, setCurrentView] = useState('landing');
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [hasFreeTrial, setHasFreeTrial] = useState(true);
  const [user, setUser] = useState({ name: '', email: '' });
  const [loginForm, setLoginForm] = useState({ email: '', password: '' });
  const [registerForm, setRegisterForm] = useState({ name: '', email: '', password: '', confirmPassword: '' });
  const [uploadedImage, setUploadedImage] = useState(null);
  const [processedImage, setProcessedImage] = useState(null);
  const [loading, setLoading] = useState(false);
  const [decorIdeas, setDecorIdeas] = useState([]);
  const fileInputRef = useRef(null);

  const handleLogin = (e) => {
    e.preventDefault();
    setIsLoggedIn(true);
    setUser({ name: 'Usuario Demo', email: loginForm.email });
    setCurrentView('dashboard');
  };

  const handleRegister = (e) => {
    e.preventDefault();
    if (registerForm.password !== registerForm.confirmPassword) {
      alert('Las contraseñas no coinciden');
      return;
    }
    setIsLoggedIn(true);
    setUser({ name: registerForm.name, email: registerForm.email });
    setCurrentView('dashboard');
  };

  const handleImageUpload = (e) => {
    const file = e.target.files?.[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = (event) => {
        setUploadedImage(event.target?.result);
        setCurrentView('result');
        processImageWithAI();
      };
      reader.readAsDataURL(file);
    }
  };

  const processImageWithAI = () => {
    setLoading(true);
    setTimeout(() => {
      setLoading(false);
      setDecorIdeas([
        "Incorporar plantas de interior para añadir frescura natural",
        "Usar una combinación de colores tierra para crear calidez",
        "Añadir estanterías flotantes para maximizar el espacio vertical",
        "Incluir iluminación ambiental con lámparas de pie estratégicas"
      ]);
      setProcessedImage("https://images.unsplash.com/photo-1505873242700-f289a29e1e0f?auto=format&fit=crop&w=600&q=80");
      setHasFreeTrial(false);
    }, 3000);
  };

  const handlePayment = () => {
    alert('¡Pago procesado exitosamente! Ahora tienes acceso por una semana (10 soles)');
    setCurrentView('dashboard');
  };

  const LoginForm = ({ onSwitchToRegister }) => (
    <form onSubmit={handleLogin} className="space-y-4">
      <div>
        <label className="block text-sm font-medium text-gray-700 mb-1">Correo electrónico</label>
        <input 
          type="email" 
          value={loginForm.email}
          onChange={(e) => setLoginForm({...loginForm, email: e.target.value})}
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
          placeholder="tu@email.com"
          required
        />
      </div>
      
      <div>
        <label className="block text-sm font-medium text-gray-700 mb-1">Contraseña</label>
        <input 
          type="password" 
          value={loginForm.password}
          onChange={(e) => setLoginForm({...loginForm, password: e.target.value})}
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
          placeholder="••••••••"
          required
        />
      </div>
      
      <button 
        type="submit"
        className="w-full py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 font-medium transition-colors"
      >
        Iniciar sesión
      </button>
      
      <div className="text-center">
        <button 
          type="button"
          onClick={onSwitchToRegister}
          className="text-blue-600 hover:text-blue-800 text-sm"
        >
          ¿No tienes cuenta? Regístrate ahora
        </button>
      </div>
    </form>
  );

  const RegisterForm = ({ onSwitchToLogin }) => (
    <form onSubmit={handleRegister} className="space-y-4">
      <div>
        <label className="block text-sm font-medium text-gray-700 mb-1">Nombre completo</label>
        <input 
          type="text" 
          value={registerForm.name}
          onChange={(e) => setRegisterForm({...registerForm, name: e.target.value})}
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
          placeholder="Tu nombre"
          required
        />
      </div>
      
      <div>
        <label className="block text-sm font-medium text-gray-700 mb-1">Correo electrónico</label>
        <input 
          type="email" 
          value={registerForm.email}
          onChange={(e) => setRegisterForm({...registerForm, email: e.target.value})}
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
          placeholder="tu@email.com"
          required
        />
      </div>
      
      <div>
        <label className="block text-sm font-medium text-gray-700 mb-1">Contraseña</label>
        <input 
          type="password" 
          value={registerForm.password}
          onChange={(e) => setRegisterForm({...registerForm, password: e.target.value})}
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
          placeholder="••••••••"
          required
        />
      </div>
      
      <div>
        <label className="block text-sm font-medium text-gray-700 mb-1">Confirmar contraseña</label>
        <input 
          type="password" 
          value={registerForm.confirmPassword}
          onChange={(e) => setRegisterForm({...registerForm, confirmPassword: e.target.value})}
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
          placeholder="••••••••"
          required
        />
      </div>
      
      <button 
        type="submit"
        className="w-full py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 font-medium transition-colors"
      >
        Registrarse
      </button>
      
      <div className="text-center">
        <button 
          type="button"
          onClick={onSwitchToLogin}
          className="text-blue-600 hover:text-blue-800 text-sm"
        >
          ¿Ya tienes cuenta? Inicia sesión
        </button>
      </div>
    </form>
  );

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 font-sans">
      <header className="bg-white shadow-sm py-4 px-6 flex justify-between items-center sticky top-0 z-10">
        <div 
          className="flex items-center space-x-2 cursor-pointer" 
          onClick={() => setCurrentView(isLoggedIn ? 'dashboard' : 'landing')}
        >
          <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
            <span className="text-white font-bold text-lg">S</span>
          </div>
          <h1 className="text-xl font-bold text-gray-800">SpaceMind</h1>
        </div>
        
        {isLoggedIn ? (
          <div className="flex items-center space-x-4">
            <button 
              onClick={() => setCurrentView('dashboard')}
              className="px-4 py-2 text-gray-600 hover:text-gray-800 font-medium"
            >
              Mi Dashboard
            </button>
            <div className="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center">
              <span className="text-sm font-medium">{user.name.charAt(0)}</span>
            </div>
          </div>
        ) : (
          <div className="flex space-x-3">
            <button 
              onClick={() => setCurrentView('login')}
              className="px-4 py-2 text-blue-600 hover:text-blue-800 font-medium"
            >
              Iniciar sesión
            </button>
            <button 
              onClick={() => setCurrentView('register')}
              className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 font-medium"
            >
              Registrarse
            </button>
          </div>
        )}
      </header>

      <main className="container mx-auto px-4 py-8 max-w-6xl">
        {currentView === 'landing' && (
          <div className="flex flex-col items-center text-center py-12">
            <div className="w-24 h-24 bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center mb-6 shadow-lg">
              <svg className="w-12 h-12 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
              </svg>
            </div>
            
            <h2 className="text-4xl font-bold text-gray-800 mb-4">Transforma tu hogar con SpaceMind</h2>
            <p className="text-lg text-gray-600 max-w-2xl mb-8">
              Toma una foto de cualquier espacio y nuestra IA te mostrará ideas creativas de decoración con ejemplos visuales.
            </p>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-12 max-w-4xl">
              <div className="bg-white p-6 rounded-xl shadow-md">
                <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-4">
                  <svg className="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z" />
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 13a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                </div>
                <h3 className="text-xl font-semibold mb-2">Toma una foto</h3>
                <p className="text-gray-600">Captura cualquier espacio de tu hogar que quieras redecorar.</p>
              </div>
              
              <div className="bg-white p-6 rounded-xl shadow-md">
                <div className="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mb-4">
                  <svg className="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
                  </svg>
                </div>
                <h3 className="text-xl font-semibold mb-2">Ideas instantáneas</h3>
                <p className="text-gray-600">Nuestra IA genera ideas de decoración personalizadas para tu espacio.</p>
              </div>
            </div>
            
            <div className="flex flex-col sm:flex-row gap-4">
              <button 
                onClick={() => setCurrentView('register')}
                className="px-8 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium text-lg shadow-md hover:shadow-lg transition-all"
              >
                Comenzar gratis
              </button>
              <button 
                onClick={() => setCurrentView('login')}
                className="px-8 py-3 border border-blue-600 text-blue-600 rounded-lg hover:bg-blue-50 font-medium text-lg"
              >
                Iniciar sesión
              </button>
            </div>
          </div>
        )}

        {currentView === 'login' && (
          <div className="max-w-md mx-auto bg-white rounded-xl shadow-md p-6">
            <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">Iniciar sesión</h2>
            <LoginForm onSwitchToRegister={() => setCurrentView('register')} />
          </div>
        )}

        {currentView === 'register' && (
          <div className="max-w-md mx-auto bg-white rounded-xl shadow-md p-6">
            <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">Crear cuenta</h2>
            <RegisterForm onSwitchToLogin={() => setCurrentView('login')} />
          </div>
        )}

        {currentView === 'dashboard' && (
          <div>
            <div className="mb-8">
              <h2 className="text-2xl font-bold text-gray-800 mb-2">Hola, {user.name}</h2>
              <p className="text-gray-600">¿Qué espacio te gustaría transformar hoy?</p>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
              <div 
                onClick={() => setCurrentView('camera')}
                className="bg-white rounded-xl shadow-md p-6 cursor-pointer hover:shadow-lg transition-all border-2 border-dashed border-gray-300 hover:border-blue-400 flex flex-col items-center justify-center h-64"
              >
                <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mb-4">
                  <svg className="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 4v16m8-8H4" />
                  </svg>
                </div>
                <h3 className="text-lg font-semibold text-gray-800 mb-2">Nuevo diseño</h3>
                <p className="text-gray-600 text-center">Sube una foto para generar ideas de decoración</p>
              </div>
              
              <div className="bg-white rounded-xl shadow-md p-6 border border-gray-200">
                <h3 className="text-lg font-semibold text-gray-800 mb-4">Tus diseños recientes</h3>
                <p className="text-gray-500 text-center py-8">Aún no tienes diseños guardados</p>
              </div>
            </div>
            
            <div className="bg-white rounded-xl shadow-md p-6">
              <h3 className="text-lg font-semibold text-gray-800 mb-4">Tu plan actual</h3>
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-gray-600">
                    {hasFreeTrial ? 'Prueba gratuita (1 diseño restante)' : 'Plan Básico (10 soles/semana)'}
                  </p>
                </div>
                {!hasFreeTrial && (
                  <button 
                    onClick={() => setCurrentView('payment')}
                    className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm"
                  >
                    Gestionar suscripción
                  </button>
                )}
              </div>
            </div>
          </div>
        )}

        {currentView === 'camera' && (
          <div className="max-w-2xl mx-auto">
            <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">Captura tu espacio</h2>
            
            <div className="bg-white rounded-xl shadow-md p-6 mb-6">
              <p className="text-gray-600 mb-4">
                {hasFreeTrial 
                  ? 'Tienes 1 diseño gratuito disponible. Después de esto, necesitarás suscribirte para continuar usando SpaceMind.'
                  : 'Sube una foto de la zona que quieres redecorar.'
                }
              </p>
              
              <div 
                className="border-2 border-dashed border-gray-300 rounded-lg p-8 text-center cursor-pointer hover:border-blue-400 transition-colors"
                onClick={() => fileInputRef.current?.click()}
              >
                <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <svg className="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                  </svg>
                </div>
                <p className="text-gray-700 font-medium">Haz clic para subir una foto</p>
                <p className="text-gray-500 text-sm mt-1">o arrastra y suelta una imagen</p>
                <input 
                  type="file" 
                  ref={fileInputRef}
                  onChange={handleImageUpload}
                  accept="image/*"
                  className="hidden"
                />
              </div>
            </div>
            
            <div className="bg-blue-50 rounded-xl p-4 border border-blue-200">
              <div className="flex">
                <div className="flex-shrink-0">
                  <svg className="h-5 w-5 text-blue-400" viewBox="0 0 20 20" fill="currentColor">
                    <path fillRule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clipRule="evenodd" />
                  </svg>
                </div>
                <div className="ml-3">
                  <h3 className="text-sm font-medium text-blue-800">Consejos para mejores resultados</h3>
                  <div className="mt-2 text-sm text-blue-700">
                    <ul className="list-disc pl-5 space-y-1">
                      <li>Toma la foto con buena iluminación</li>
                      <li>Asegúrate de capturar todo el espacio que quieres redecorar</li>
                      <li>Mantén la cámara estable para obtener una imagen nítida</li>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}

        {currentView === 'result' && (
          <div className="max-w-4xl mx-auto">
            <h2 className="text-2xl font-bold text-gray-800 mb-6">Ideas para tu espacio</h2>
            
            {loading ? (
              <div className="bg-white rounded-xl shadow-md p-8 text-center">
                <div className="flex justify-center mb-6">
                  <div className="w-16 h-16 border-4 border-blue-100 border-t-blue-600 rounded-full animate-spin"></div>
                </div>
                <h3 className="text-lg font-medium text-gray-800 mb-2">Procesando tu imagen</h3>
                <p className="text-gray-600">Nuestra IA está generando ideas de decoración para tu espacio...</p>
              </div>
            ) : (
              <div className="space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div className="bg-white rounded-xl shadow-md p-4">
                    <h3 className="font-medium text-gray-800 mb-3">Tu espacio actual</h3>
                    <div className="aspect-video bg-gray-200 rounded-lg overflow-hidden">
                      {uploadedImage && (
                        <img 
                          src={uploadedImage} 
                          alt="Imagen del espacio actual" 
                          className="w-full h-full object-cover"
                        />
                      )}
                    </div>
                  </div>
                  
                  <div className="bg-white rounded-xl shadow-md p-4">
                    <h3 className="font-medium text-gray-800 mb-3">Propuesta de diseño</h3>
                    <div className="aspect-video bg-gray-200 rounded-lg overflow-hidden">
                      <img 
                        src={processedImage} 
                        alt="Propuesta de diseño moderno para el espacio" 
                        className="w-full h-full object-cover"
                      />
                    </div>
                  </div>
                </div>
                
                <div className="bg-white rounded-xl shadow-md p-6">
                  <h3 className="text-lg font-semibold text-gray-800 mb-4">Ideas de decoración</h3>
                  <ul className="space-y-3">
                    {decorIdeas.map((idea, index) => (
                      <li key={index} className="flex items-start">
                        <svg className="h-5 w-5 text-blue-500 mt-0.5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                        </svg>
                        <span className="text-gray-700">{idea}</span>
                      </li>
                    ))}
                  </ul>
                </div>
                
                <div className="flex justify-center gap-4">
                  <button 
                    onClick={() => setCurrentView('dashboard')}
                    className="px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700"
                  >
                    Volver al inicio
                  </button>
                  <button 
                    onClick={() => setCurrentView('camera')}
                    className="px-6 py-2 border border-blue-600 text-blue-600 rounded-md hover:bg-blue-50"
                  >
                    Probar otra imagen
                  </button>
                </div>
              </div>
            )}
          </div>
        )}

        {currentView === 'payment' && (
          <div className="max-w-md mx-auto bg-white rounded-xl shadow-md p-6">
            <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">Suscripción SpaceMind</h2>
            
            <div className="bg-blue-50 rounded-lg p-4 mb-6">
              <h3 className="font-semibold text-blue-800 mb-2">Plan Básico - 10 soles/semana</h3>
              <p className="text-blue-600">Acceso ilimitado a todas las funciones de SpaceMind por 7 días</p>
            </div>
            
            <div className="space-y-4 mb-6">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Número de tarjeta</label>
                <input 
                  type="text"
                  className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  placeholder="1234 5678 9012 3456"
                />
              </div>
              
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">Fecha de expiración</label>
                  <input 
                    type="text"
                    className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="MM/AA"
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">CVV</label>
                  <input 
                    type="text"
                    className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="123"
                  />
                </div>
              </div>
            </div>
            
            <button 
              onClick={handlePayment}
              className="w-full py-3 bg-blue-600 text-white rounded-md hover:bg-blue-700 font-medium"
            >
              Pagar 10.00 Soles
            </button>
            
            <button 
              onClick={() => setCurrentView('dashboard')}
              className="w-full py-2 text-gray-600 hover:text-gray-800 mt-3"
            >
              Cancelar
            </button>
          </div>
        )}
      </main>

      <footer className="bg-white border-t mt-12 py-8">
        <div className="container mx-auto px-4 text-center text-gray-600">
          <p>© 2024 SpaceMind. Todos los derechos reservados.</p>
        </div>
      </footer>
    </div>
  );
};

export default SpaceMindApp;